
apply plugin: 'java'
apply plugin: "war"

ext {
    env = System.getProperty("env") ?: "local"
}

configurations {
    all*.exclude group: "commons-logging"
    all*.exclude module: "slf4j-log4j12"
}


 // 项目构建JDK版本
sourceCompatibility = 1.8
targetCompatibility = 1.8



 // 编译参数
[compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:none", "-g"]
[compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'

// 仓库
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
 	// Spring
    compile "org.springframework:spring-aop:$springVersion",
    	"org.springframework:spring-core:$springVersion",
    	"org.springframework:spring-beans:$springVersion",
    	"org.springframework:spring-context:$springVersion"

    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion",
        "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    runtime "org.apache.logging.log4j:log4j-core:$log4jVersion"

    // mysql
	compile	"mysql:mysql-connector-java:$mysqlVersion"


    // spring orm
    compile "org.springframework:spring-jdbc:$springVersion"

    // spring mvc
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-web:$springVersion"


    // redis
    compile "org.springframework.data:spring-data-redis:$springDataRedis"

	// library
	compile "joda-time:joda-time:$jodaVersion",
		"com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    providedCompile "org.projectlombok:lombok:1.12.4"

	// 
	providedCompile "javax.servlet:javax.servlet-api:3.0.1",
                'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
    // Testing
    testCompile "junit:junit:$junitVersion",
        "org.hamcrest:hamcrest-library:$hamcrestVersion",
        "org.springframework:spring-test:$springVersion",
        "org.hsqldb:hsqldb:$hsqldbVersion"
}

processResources {
    println env
    from(sourceSets.main.resources.srcDirs) {
        filter{ String line -> line.replace("", "222") }
    }
}

sourceSets {
    main {
        output.resourcesDir = "${buildDir}/classes/main"
        java {
            resources {
                srcDirs = ["src/main/resources/public", "src/main/resources/$env"]
            }
        }
    }
}
task wrapper(type:Wrapper){
	gradleVersion= '1.11'
}